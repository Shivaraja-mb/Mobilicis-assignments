# Create a new VPC
resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/16"
}

# Create two public subnets in the VPC
resource "aws_subnet" "public_subnet1" {
  vpc_id                  = aws_vpc.my_vpc.id
  cidr_block              = "10.0.0.0/24"
  availability_zone       = "us-east-1a"
}

resource "aws_subnet" "public_subnet2" {
  vpc_id                  = aws_vpc.my_vpc.id
  cidr_block              = "10.0.1.0/24"
  availability_zone       = "us-east-1b"
}

# Create security group with port 80 open
resource "aws_security_group" "web_sg" {
  vpc_id = aws_vpc.my_vpc.id

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# Create EC2 instances
resource "aws_instance" "web_instance1" {
  ami           = "ami-12345678"  # Replace with your desired AMI ID
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.public_subnet1.id
  vpc_security_group_ids = [aws_security_group.web_sg.id]
}

resource "aws_instance" "web_instance2" {
  ami           = ami-0889a44b331db0194
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.public_subnet2.id
  vpc_security_group_ids = [aws_security_group.web_sg.id]
}

# Create a load balancer
resource "aws_lb" "web_lb" {
  name               = "my-load-balancer"
  internal           = false
  load_balancer_type = "application"
  security_groups    = [aws_security_group.web_sg.id]
  subnets            = [aws_subnet.public_subnet1.id, aws_subnet.public_subnet2.id]
}

# Attach instances to the load balancer target group
resource "aws_lb_target_group_attachment" "web_lb_attachment1" {
  target_group_arn = aws_lb.web_lb.arn
  target_id        = aws_instance.web_instance1.id
  port             = 80
}

resource "aws_lb_target_group_attachment" "web_lb_attachment2" {
  target_group_arn = aws_lb.web_lb.arn
  target_id        = aws_instance.web_instance2.id
  port             = 80
}
